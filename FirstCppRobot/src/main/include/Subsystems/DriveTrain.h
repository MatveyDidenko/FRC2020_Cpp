// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

#include "frc/commands/Subsystem.h"
#include "frc/drive/DifferentialDrive.h"
#include "frc/SpeedControllerGroup.h"

#include "ctre/Phoenix.h"
#include "ctre/phoenix/motorcontrol/can/WPI_TalonSRX.h"
#include "ctre/phoenix/motorcontrol/can/VictorSPX.h"

class DriveTrain: public frc::Subsystem {

	// Alias for TalonSRX motor
	using TalonSRXMotor=ctre::phoenix::motorcontrol::can::WPI_TalonSRX;
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::unique_ptr<TalonSRXMotor> left1;
	std::unique_ptr<TalonSRXMotor> left2;
	std::unique_ptr<WPI_TalonSRX> right1;
	std::unique_ptr<TalonSRXMotor> right2;

	std::unique_ptr<frc::SpeedControllerGroup> m_left;
	std::unique_ptr<frc::SpeedControllerGroup> m_right;

	std::unique_ptr<frc::DifferentialDrive> driveTrain;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
DriveTrain();
	void InitDefaultCommand() override;
	void Periodic() override;
	void Drive(double speedLeft, double speedRight);
	
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS


};
